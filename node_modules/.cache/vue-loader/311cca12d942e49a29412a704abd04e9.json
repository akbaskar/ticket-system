{"remainingRequest":"/home/baskar/ticket-System/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/baskar/ticket-System/src/components/TicketList.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/baskar/ticket-System/src/components/TicketList.vue","mtime":1555907795619},{"path":"/home/baskar/ticket-System/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/baskar/ticket-System/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/baskar/ticket-System/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/baskar/ticket-System/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/baskar/ticket-System/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.pagination {\n    display: flex;\n    background-color: rgba(195, 195, 195, 0.23);\n    flex: 1;\n    flex-direction: row;\n    max-width: 400px;\n    border: #d5d5d5 0.5px solid;\n    margin: auto;\n}\n\n.page-item {\n    flex: 1;\n    color: red;\n}\n\n.page-link-item {\n    color: black;\n}\n\n.prev-item {\n    color: black;\n\n}\n\n.prev-link-item {\n    color: black;\n\n}\n\n.next-item {\n    color: black;\n\n}\n\n.next-link-item {\n    color: black;\n\n}\n\n.break-view {\n}\n\n.break-view-item {\n}\n\n\n",{"version":3,"sources":["TicketList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA","file":"TicketList.vue","sourceRoot":"src/components","sourcesContent":["<template>\n\n    <div class=\"text-center mx-auto \">\n        <Search @updateSearch=\"updateSearchText\"></Search>\n\n        <Sorter :updateSort=\"updateSort\"></Sorter>\n\n        <Paginate\n                v-if=\"tickets.length\"\n                :page-count=\"totalPages\"\n                :click-handler=\"clickPaginate\"\n                :prev-text=\"'<'\"\n                :next-text=\"'>'\"\n                :container-class=\"'pagination'\"\n                :page-class=\"'page-item'\"\n                :page-link-class=\"'page-link-item'\"\n                :prev-class=\"'prev-item'\"\n                :prev-link-class=\"'prev-link-item'\"\n                :next-class=\"'next-item'\"\n                :next-link-class=\"'next-link-item'\"\n                :break-view-class=\"'break-view'\"\n                :break-view-link-class=\"'break-view-link'\"\n        >\n        </Paginate>\n\n        <table class=\"table table-sm table-striped rounded\">\n            <thead>\n            <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">Filed Against</th>\n                <th scope=\"col\">Priority</th>\n                <th scope=\"col\">Type</th>\n            </tr>\n            </thead>\n            <tbody>\n            <Ticket v-for=\"(ticket,index) in tickets\" v-bind:key=\"index\" :ticket=\"ticket\"/>\n\n            </tbody>\n        </table>\n\n        <Paginate\n                v-if=\"tickets.length\"\n                :page-count=\"totalPages\"\n                :click-handler=\"clickPaginate\"\n                :prev-text=\"'<'\"\n                :next-text=\"'>'\"\n                :container-class=\"'pagination'\"\n                :page-class=\"'page-item'\"\n                :page-link-class=\"'page-link-item'\"\n                :prev-class=\"'prev-item'\"\n                :prev-link-class=\"'prev-link-item'\"\n                :next-class=\"'next-item'\"\n                :next-link-class=\"'next-link-item'\"\n                :break-view-class=\"'break-view'\"\n                :break-view-link-class=\"'break-view-link'\"\n        >\n        </Paginate>\n\n\n    </div>\n</template>\n\n<script>\n    import Ticket from \"./Ticket\";\n    import tickets from '../../data/Tickets';\n    import Search from \"./Search\";\n    import Paginate from 'vuejs-paginate'\n    import Sorter from \"./Sorter\";\n    import SearchByKeys from \"../utils/SearchByKeys\";\n    import {ITEMS_PER_PAGE, SEARCH_FIELD_NAMES, SORT_ORDERS as DEFAULT_SORT, SORT_ORDERS} from \"../constants\";\n    import PaginateArray from \"../utils/PaginateArray\";\n    import SortByKey from \"../utils/SortByKey\";\n\n    const itemsPerPage = ITEMS_PER_PAGE;\n    let currentPage = 1;\n    const totalPages = parseInt(tickets.length / itemsPerPage);\n\n    export default {\n        name: \"TicketList\",\n        components: {Sorter, Search, Ticket, Paginate},\n        data: () => ({\n            tickets: tickets,\n            currentPage: currentPage,\n            totalPages: totalPages,\n            searchedText: \"\"\n\n        }),\n        created: function () {\n            this.tickets = PaginateArray(tickets, itemsPerPage, currentPage);\n\n\n        },\n        methods: {\n            clickPaginate: function (pageNum) {\n                this.currentPage = pageNum;\n                this.tickets = PaginateArray(tickets, itemsPerPage, pageNum);\n            },\n            updateSearchText: function (newSearchText) {\n                this.searchedText = newSearchText;\n                const searchResultTicketsArray = SearchByKeys(tickets, SEARCH_FIELD_NAMES, this.searchedText);\n                const arrLen = searchResultTicketsArray.length;\n                this.tickets = PaginateArray(searchResultTicketsArray, itemsPerPage, currentPage);\n                this.totalPages = parseInt(arrLen / itemsPerPage);\n            },\n\n\n            updateSort: function (sorterObj) {\n                console.log(sorterObj.displayName);\n                this.tickets = SortByKey(tickets, sorterObj.sortBy, SORT_ORDERS.ASC, sorterObj.sortOrder);\n                const arrLen = this.tickets.length;\n\n                console.log(arrLen)\n                this.currentPage = 1;\n                this.tickets = PaginateArray(this.tickets, itemsPerPage, currentPage);\n                this.totalPages = parseInt(arrLen / itemsPerPage);\n            }\n        }\n    }\n</script>\n\n<style lang=\"css\">\n    .pagination {\n        display: flex;\n        background-color: rgba(195, 195, 195, 0.23);\n        flex: 1;\n        flex-direction: row;\n        max-width: 400px;\n        border: #d5d5d5 0.5px solid;\n        margin: auto;\n    }\n\n    .page-item {\n        flex: 1;\n        color: red;\n    }\n\n    .page-link-item {\n        color: black;\n    }\n\n    .prev-item {\n        color: black;\n\n    }\n\n    .prev-link-item {\n        color: black;\n\n    }\n\n    .next-item {\n        color: black;\n\n    }\n\n    .next-link-item {\n        color: black;\n\n    }\n\n    .break-view {\n    }\n\n    .break-view-item {\n    }\n\n\n</style>"]}]}