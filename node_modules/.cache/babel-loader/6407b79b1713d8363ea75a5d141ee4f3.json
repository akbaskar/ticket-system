{"remainingRequest":"/home/baskar/ticket-System/node_modules/babel-loader/lib/index.js!/home/baskar/ticket-System/node_modules/eslint-loader/index.js??ref--13-0!/home/baskar/ticket-System/src/utils/SearchByKeys.js","dependencies":[{"path":"/home/baskar/ticket-System/src/utils/SearchByKeys.js","mtime":1555907795619},{"path":"/home/baskar/ticket-System/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/baskar/ticket-System/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/baskar/ticket-System/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport _getIterator from \"/home/baskar/ticket-System/node_modules/@babel/runtime-corejs2/core-js/get-iterator\";\n\n/**\n * @author Athul Muralidharan\n * SearchByKeys\n *\n * @param arr the array  of objects in which the search must be performed.\n * @param searchFieldNames, Array<String>,\n * the names of the field in the object  in arr to which searchText is to be compared\n * @param searchText the text to be searched across the array\n * @returns {*}  a new array of objects that contains the searchText  in any of searchFieldNames\n *\n * Note :\n * The comparison is non-case-sensitive.\n * The searchFieldNames is an array of String\n * As soon as a field contains the searchText it returns true.\n * Warning:\n * This function WILL BREAK if unicode characters are passed  in arr or searchText.\n *\n * Tests :\n *  #1\n *  \tarr =[{name : \"abc\"},{name:\"\"},{name: \"Ab\"}]\n *  \tsearchFieldNames = [\"name\"]\n *  \tsearchText = \"ab\"\n *  \tconditionalSearch(arr, searchFieldNames, searchText) => [{name : \"abc\"},{name: \"Ab\"}]\n *  #2\n *  \tarr =[{name : \"abc\"},{name:\"\"},{name: \"Ab\"}]\n *  \tsearchFieldNames = [\"name\"]\n *  \tsearchText = \"Ab\"\n *  \tconditionalSearch(arr, searchFieldNames, searchText) => [{name : \"abc\"},{name: \"Ab\"}]\n *\n *  #3\n *  \tarr =[{name : \"abc\"},{name:\"\"},{name: \"Ab\"}]\n *  \tsearchFieldNames = [\"name\"]\n *  \tsearchText = \"\"\n *  \tconditionalSearch(arr, searchFieldNames, searchText) => [{name : \"abc\"},{name: \"\"},{name: \"Ab\"}]\n *  #4\n *  \tarr =[{name : \"abc\", },{name:\"\"},{name: \"Ab\"}]\n *  \tsearchFieldNames = [\"name\",\"description\"]\n *  \tsearchText = \"\"\n *  \tconditionalSearch(arr, searchFieldNames, searchText) => [{name : \"abc\"},{name: \"\"},{name: \"Ab\"}]\n *  #5\n *  \tarr =[{name : \"abc\",description:\"\" },{name:\"\",description:\"apple\"},{name: \"Ab\",description:\"\"}]\n *  \tsearchFieldNames = [\"name\",\"description\"]\n *  \tsearchText = \"apple\"\n *  \tconditionalSearch(arr, searchFieldNames, searchText) => [{name:\"\",description:\"apple\"}]\n *\n * \t#6\n *  \tarr =[{name : \"abc\",description:\"\" },{name:\"\",description:\"apple\"},{name: \"Ab\",description:\"\"}]\n *  \tsearchFieldNames = [\"name\",\"description\"]\n *  \tsearchText = \"xyz\"\n *  \tconditionalSearch(arr, searchFieldNames, searchText) => []\n *\n *\n */\nexport default function SearchByKeys(arr, searchFieldNames, searchText) {\n  return arr.filter(function (obj) {\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = _getIterator(searchFieldNames), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var searchFieldName = _step.value;\n\n        if (obj[searchFieldName].toString().toLowerCase().includes(searchText.toString().toLowerCase())) {\n          return true;\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    return false;\n  });\n}",{"version":3,"sources":["/home/baskar/ticket-System/src/utils/SearchByKeys.js"],"names":["SearchByKeys","arr","searchFieldNames","searchText","filter","obj","searchFieldName","toString","toLowerCase","includes"],"mappings":";;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDA,eAAe,SAASA,YAAT,CAAuBC,GAAvB,EAA2BC,gBAA3B,EAA6CC,UAA7C,EAAwD;AACnE,SAAOF,GAAG,CAACG,MAAJ,CAAW,UAACC,GAAD,EAAO;AAAA;AAAA;AAAA;;AAAA;AACrB,wCAA2BH,gBAA3B,4GACA;AAAA,YADQI,eACR;;AACI,YAAID,GAAG,CAACC,eAAD,CAAH,CAAqBC,QAArB,GAAgCC,WAAhC,GACCC,QADD,CACUN,UAAU,CAACI,QAAX,GAAsBC,WAAtB,EADV,CAAJ,EACmD;AAC/C,iBAAO,IAAP;AACH;AACJ;AAPoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQrB,WAAO,KAAP;AACH,GATM,CAAP;AAUH","sourcesContent":["/**\n * @author Athul Muralidharan\n * SearchByKeys\n *\n * @param arr the array  of objects in which the search must be performed.\n * @param searchFieldNames, Array<String>,\n * the names of the field in the object  in arr to which searchText is to be compared\n * @param searchText the text to be searched across the array\n * @returns {*}  a new array of objects that contains the searchText  in any of searchFieldNames\n *\n * Note :\n * The comparison is non-case-sensitive.\n * The searchFieldNames is an array of String\n * As soon as a field contains the searchText it returns true.\n * Warning:\n * This function WILL BREAK if unicode characters are passed  in arr or searchText.\n *\n * Tests :\n *  #1\n *  \tarr =[{name : \"abc\"},{name:\"\"},{name: \"Ab\"}]\n *  \tsearchFieldNames = [\"name\"]\n *  \tsearchText = \"ab\"\n *  \tconditionalSearch(arr, searchFieldNames, searchText) => [{name : \"abc\"},{name: \"Ab\"}]\n *  #2\n *  \tarr =[{name : \"abc\"},{name:\"\"},{name: \"Ab\"}]\n *  \tsearchFieldNames = [\"name\"]\n *  \tsearchText = \"Ab\"\n *  \tconditionalSearch(arr, searchFieldNames, searchText) => [{name : \"abc\"},{name: \"Ab\"}]\n *\n *  #3\n *  \tarr =[{name : \"abc\"},{name:\"\"},{name: \"Ab\"}]\n *  \tsearchFieldNames = [\"name\"]\n *  \tsearchText = \"\"\n *  \tconditionalSearch(arr, searchFieldNames, searchText) => [{name : \"abc\"},{name: \"\"},{name: \"Ab\"}]\n *  #4\n *  \tarr =[{name : \"abc\", },{name:\"\"},{name: \"Ab\"}]\n *  \tsearchFieldNames = [\"name\",\"description\"]\n *  \tsearchText = \"\"\n *  \tconditionalSearch(arr, searchFieldNames, searchText) => [{name : \"abc\"},{name: \"\"},{name: \"Ab\"}]\n *  #5\n *  \tarr =[{name : \"abc\",description:\"\" },{name:\"\",description:\"apple\"},{name: \"Ab\",description:\"\"}]\n *  \tsearchFieldNames = [\"name\",\"description\"]\n *  \tsearchText = \"apple\"\n *  \tconditionalSearch(arr, searchFieldNames, searchText) => [{name:\"\",description:\"apple\"}]\n *\n * \t#6\n *  \tarr =[{name : \"abc\",description:\"\" },{name:\"\",description:\"apple\"},{name: \"Ab\",description:\"\"}]\n *  \tsearchFieldNames = [\"name\",\"description\"]\n *  \tsearchText = \"xyz\"\n *  \tconditionalSearch(arr, searchFieldNames, searchText) => []\n *\n *\n */\nexport default function SearchByKeys (arr,searchFieldNames, searchText){\n    return arr.filter((obj)=>{\n        for(let searchFieldName of searchFieldNames)\n        {\n            if (obj[searchFieldName].toString().toLowerCase()\n                .includes(searchText.toString().toLowerCase())){\n                return true\n            }\n        }\n        return false;\n    })\n}\n"]}]}